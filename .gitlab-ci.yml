# Stable img
# image: "rust"

# Nightly
# https://hub.docker.com/r/rustlang/rust/
image: "rustlang/rust:nightly"

# Optional: Pick zero or more services to be used on all builds.
# Only needed when using a docker container to run your tests in.
# Check out: http://docs.gitlab.com/ce/ci/docker/using_docker_images.html#what-is-a-service
#services:
#  - mysql:latest
#  - redis:latest
#  - postgres:latest

# Optional: Install a C compiler, cmake and git into the container.
# You will often need this when you (or any of your dependencies) depends on C code.
# before_script:
# - apt-get update -yqq
# - apt-get install -yqq --no-install-recommends build-essential

variables:
  RUSTFLAGS: "-C link-dead-code"

build:cargo:
  script:
  - rustc --version && cargo --version      # Print version info for debugging
  - cargo build

# Use cargo to test the project
test:cargo:
  script:
  - rustc --version && cargo --version      # Print version info for debugging
  - cargo test --verbose
  # - cargo test --verbose --jobs 1 --release # Don't paralize to make errors more readable

